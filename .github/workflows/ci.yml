name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        
    - name: Install dependencies
      run: poetry install
        
    - name: Run tests
      run: poetry run pytest
      
    - name: Run linting
      run: |
        poetry run black . --check
        poetry run isort . --check
        poetry run flake8 .
        poetry run mypy .

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        
    - name: Install dependencies
      run: poetry install
        
    - name: Build and push Docker images
      run: |
        docker build -t your-registry/employee-attrition-api:latest -f Dockerfile .
        docker build -t your-registry/employee-attrition-mlflow:latest -f Dockerfile.mlflow .
        docker build -t your-registry/employee-attrition-frontend:latest -f Dockerfile.frontend .
        
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        
        docker push your-registry/employee-attrition-api:latest
        docker push your-registry/employee-attrition-mlflow:latest
        docker push your-registry/employee-attrition-frontend:latest

  drift_detection:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        
    - name: Install dependencies
      run: poetry install
        
    - name: Run drift detection
      run: |
        poetry run python scripts/drift_detection.py --trigger-workflow
      env:
        MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
        DATABASE_URL_PYMSSQL: ${{ secrets.DATABASE_URL_PYMSSQL }}

  fairness_testing:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        
    - name: Install dependencies
      run: poetry install
        
    - name: Run fairness testing
      run: |
        poetry run python scripts/fairness_testing.py
      env:
        MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
        DATABASE_URL_PYMSSQL: ${{ secrets.DATABASE_URL_PYMSSQL }} 